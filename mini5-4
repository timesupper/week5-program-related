#http://www.codeskulptor.org/#user31_nhUnEBKDT5RjbW8.py
# implementation of card game - Memory

import simplegui
import random
list1 = range(0, 8)
list2 = range(0, 8)
deck = list1+list2
cards = len(deck)
exposed = [False]*16 
count = 0
pos = [15, 60]

# helper function to initialize globals
def new_game():
    global pos, list1, list2, deck, cards, state, count, exposed
    count = 0
    exposed = [False]*16
    random.shuffle(deck)
    state = 0
    label.set_text("Turns = 0") 
     
# define event handlers
def mouseclick(pos):
    # add game state logic here
    global state, count, deck, card1, card2
    click = pos[0]//50
    if exposed[click]== False:
        exposed[click] = True
        
        
        if state == 0:
            state = 1
            card1 = click
            exposed[card1] = True 
            count += 1
        elif state == 1:
            state = 2
            card2 = click
            exposed[card2] = True
        elif state == 2:
            if deck[card1] != deck[card2]:
                exposed[card1] = False
                exposed[card2] = False
            state = 1
            count += 1
            card1 = click
            exposed[card1] = True
    
        label.set_text("Turns = " + str(count)) 
                        
# cards are logically 50x100 pixels in size    
def draw(canvas):
    global pos, list1, list2, exposed, deck
    for n in range(len(deck)):
        if exposed[n] == True:
            canvas.draw_text(str(deck[n]), (pos[0]+n*50, pos[1]), 40, "White")
        else:
            canvas.draw_polygon([[(n*50)+0, 0], [(n*50)+50, 0], [(n*50)+50, 100], [(n*50)+0, 100]], 4, "Black", "Green")

# create frame and add a button and labels
frame = simplegui.create_frame("Memory", 800, 100)
frame.add_button("Reset", new_game)
label = frame.add_label("Turns = 0")

# register event handlers
frame.set_mouseclick_handler(mouseclick)
frame.set_draw_handler(draw)

# get things rolling
new_game()
frame.start()


# Always remember to review the grading rubric
